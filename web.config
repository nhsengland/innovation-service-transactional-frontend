<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <system.web>
    <!-- 10 MB in kilobytes -->
    <httpRuntime maxRequestLength="10240" />
  </system.web>
  <system.webServer>
    <webSocket enabled="false" />

      <handlers>
        <!-- Indicates that the server/main.js file is a node.js site to be handled by the iisnode module -->
        <add name="iisnode" path="server/main.js" verb="*" modules="iisnode"/>
      </handlers>

      <rewrite>
        <rules>
          <!-- Do not interfere with requests for node-inspector debugging -->
          <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">                    
            <match url="^server/main.js\/debug[\/]?" />
          </rule>
          <rule name="app" enabled="true" patternSyntax="ECMAScript" stopProcessing="true">
            <match url="iisnode.+" negate="true" />
            <conditions logicalGrouping="MatchAll" trackAllCaptures="false" />
            <action type="Rewrite" url="server/main.js" />
           </rule>
        </rules>

        <!-- Stop search engines indexing-->
        <outboundRules>
          <rule name="Noindex Domains">
              <match serverVariable="RESPONSE_X_Robots_Tag" pattern=".*" />
                <action type="Rewrite" value="NOINDEX, NOFOLLOW"/>
          </rule>
        </outboundRules>
      </rewrite>

      <!-- server directory has no special meaning in node.js and apps can be placed in it -->
      <security>
        <requestFiltering>
          <hiddenSegments>
            <remove segment="server"/>
          </hiddenSegments>
          <!-- 20 MB in bytes -->
          <requestLimits maxAllowedContentLength="20971520" />
        </requestFiltering>
      </security>

      <!-- Make sure error responses are left untouched -->
      <httpErrors existingResponse="PassThrough" />
      <iisnode watchedFiles="web.config;*.js" debuggingEnabled="false" />

  </system.webServer>
</configuration>
