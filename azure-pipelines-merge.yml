# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

trigger:
- develop
- master

pr: none

name: InnovationServiceTransactionalFrontend_$(SourceBranchName)_1.0.0_$(Date:yyyyMMdd)_$(Rev:.r)

variables:
  ARTIFACT_NAME: transactional-app

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'ci'
  displayName: 'NPM CI'
  

- script: |
    npm run lint
  displayName: 'Run Lint'

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'test -- --ci --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura'
  displayName: 'Run Tests'


- task: PublishTestResults@2
  displayName: 'Publish Unit Test Results'
  inputs:
    testResultsFiles: junit.xml
    mergeTestResults: true
    testRunTitle: 'Transactional Frontend Unit Test Results'
    failTaskOnFailedTests: true

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Unit Test Coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: coverage/cobertura-coverage.xml


- script: |
    npm run build:ssr
  displayName: 'Run Build'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: '$(ARTIFACT_NAME)'
    targetPath: 'dist/'
